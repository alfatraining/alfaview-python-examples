# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from pb.common import replyInfo_pb2 as common_dot_replyInfo__pb2
from user import userService_pb2 as user_dot_userService__pb2


class UserServiceStub(object):
    """*
    Manages user as well as user profile information on our platform.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.userList = channel.unary_unary(
                '/user.UserService/userList',
                request_serializer=user_dot_userService__pb2.UserListRequest.SerializeToString,
                response_deserializer=user_dot_userService__pb2.UserListReply.FromString,
                )
        self.userCreate = channel.unary_unary(
                '/user.UserService/userCreate',
                request_serializer=user_dot_userService__pb2.UserCreateRequest.SerializeToString,
                response_deserializer=user_dot_userService__pb2.UserCreateReply.FromString,
                )
        self.userUpdate = channel.unary_unary(
                '/user.UserService/userUpdate',
                request_serializer=user_dot_userService__pb2.UserUpdateRequest.SerializeToString,
                response_deserializer=common_dot_replyInfo__pb2.ReplyInfo.FromString,
                )
        self.userDestroy = channel.unary_unary(
                '/user.UserService/userDestroy',
                request_serializer=user_dot_userService__pb2.UserDestroyRequest.SerializeToString,
                response_deserializer=common_dot_replyInfo__pb2.ReplyInfo.FromString,
                )
        self.userProfileUpdate = channel.unary_unary(
                '/user.UserService/userProfileUpdate',
                request_serializer=user_dot_userService__pb2.UserProfileUpdateRequest.SerializeToString,
                response_deserializer=common_dot_replyInfo__pb2.ReplyInfo.FromString,
                )
        self.userGetLocale = channel.unary_unary(
                '/user.UserService/userGetLocale',
                request_serializer=user_dot_userService__pb2.UserGetLocaleRequest.SerializeToString,
                response_deserializer=user_dot_userService__pb2.UserGetLocaleReply.FromString,
                )


class UserServiceServicer(object):
    """*
    Manages user as well as user profile information on our platform.
    """

    def userList(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def userCreate(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def userUpdate(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def userDestroy(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def userProfileUpdate(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def userGetLocale(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'userList': grpc.unary_unary_rpc_method_handler(
                    servicer.userList,
                    request_deserializer=user_dot_userService__pb2.UserListRequest.FromString,
                    response_serializer=user_dot_userService__pb2.UserListReply.SerializeToString,
            ),
            'userCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.userCreate,
                    request_deserializer=user_dot_userService__pb2.UserCreateRequest.FromString,
                    response_serializer=user_dot_userService__pb2.UserCreateReply.SerializeToString,
            ),
            'userUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.userUpdate,
                    request_deserializer=user_dot_userService__pb2.UserUpdateRequest.FromString,
                    response_serializer=common_dot_replyInfo__pb2.ReplyInfo.SerializeToString,
            ),
            'userDestroy': grpc.unary_unary_rpc_method_handler(
                    servicer.userDestroy,
                    request_deserializer=user_dot_userService__pb2.UserDestroyRequest.FromString,
                    response_serializer=common_dot_replyInfo__pb2.ReplyInfo.SerializeToString,
            ),
            'userProfileUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.userProfileUpdate,
                    request_deserializer=user_dot_userService__pb2.UserProfileUpdateRequest.FromString,
                    response_serializer=common_dot_replyInfo__pb2.ReplyInfo.SerializeToString,
            ),
            'userGetLocale': grpc.unary_unary_rpc_method_handler(
                    servicer.userGetLocale,
                    request_deserializer=user_dot_userService__pb2.UserGetLocaleRequest.FromString,
                    response_serializer=user_dot_userService__pb2.UserGetLocaleReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """*
    Manages user as well as user profile information on our platform.
    """

    @staticmethod
    def userList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.UserService/userList',
            user_dot_userService__pb2.UserListRequest.SerializeToString,
            user_dot_userService__pb2.UserListReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def userCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.UserService/userCreate',
            user_dot_userService__pb2.UserCreateRequest.SerializeToString,
            user_dot_userService__pb2.UserCreateReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def userUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.UserService/userUpdate',
            user_dot_userService__pb2.UserUpdateRequest.SerializeToString,
            common_dot_replyInfo__pb2.ReplyInfo.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def userDestroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.UserService/userDestroy',
            user_dot_userService__pb2.UserDestroyRequest.SerializeToString,
            common_dot_replyInfo__pb2.ReplyInfo.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def userProfileUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.UserService/userProfileUpdate',
            user_dot_userService__pb2.UserProfileUpdateRequest.SerializeToString,
            common_dot_replyInfo__pb2.ReplyInfo.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def userGetLocale(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.UserService/userGetLocale',
            user_dot_userService__pb2.UserGetLocaleRequest.SerializeToString,
            user_dot_userService__pb2.UserGetLocaleReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
